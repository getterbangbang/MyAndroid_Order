package utils;

import java.util.Map;

import cn.jiguang.common.resp.APIConnectionException;
import cn.jiguang.common.resp.APIRequestException;
import cn.jpush.api.JPushClient;
import cn.jpush.api.push.PushResult;
import cn.jpush.api.push.model.Message;
import cn.jpush.api.push.model.Options;
import cn.jpush.api.push.model.Platform;
import cn.jpush.api.push.model.PushPayload;
import cn.jpush.api.push.model.audience.Audience;
import cn.jpush.api.push.model.notification.Notification;

public class Jpush {

	   //Map<String, String> parm是我自己传过来的参数,同学们可以自定义参数
	   public static void jpushAndroid(Map<String, String> parm) {
	       // 设置好账号的app_key和masterSecret 
	       String appKey = "5382a1d59fe7d6beb865e20d";
	       String masterSecret = "c3b55ededc62b7607e6ae4b2";
	       //创建JPushClient
	       JPushClient jpushClient = new JPushClient(masterSecret, appKey);
	       //推送的关键,构造一个payload 
	       PushPayload payload = PushPayload.newBuilder()
	            .setPlatform(Platform.android())//指定android平台的用户
//	            .setAudience(Audience.alias("1"))//你项目中的所有用户
	            .setAudience(Audience.all())
	            .setNotification(Notification.android(parm.get("msg"), "这是title", parm))
	            //发送内容,这里不要盲目复制粘贴,这里是我从controller层中拿过来的参数)
	            .setOptions(Options.newBuilder().setApnsProduction(false).build())
	            //这里是指定开发环境,不用设置也没关系
	            .setMessage(Message.content(parm.get("msg")))//自定义信息
	            .build();

	       try {
	            PushResult pu = jpushClient.sendPush(payload);

	        } catch (APIConnectionException e) {
	            e.printStackTrace();
	        } catch (APIRequestException e) {
	            e.printStackTrace();
	        }    
	   }
}
